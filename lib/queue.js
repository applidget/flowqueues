// Generated by CoffeeScript 1.7.1

/*
Flowqueues - Queue based programming for node.js
(c) Copyright 2014 Applidget SAS
Released under the MIT License
 */

(function() {
  var Queue, os, util;

  os = require("os");

  util = require("util");

  Queue = (function() {
    function Queue() {}

    Queue.hostname = function() {
      return os.hostname();
    };

    Queue.baseKeyName = function() {
      return "flowqueues";
    };

    Queue.queueFormat = function(jobName, taskName) {
      return "" + (this.baseKeyName()) + ":%s:" + jobName + ":" + taskName;
    };

    Queue.baseQueueNameForTask = function(jobName, taskName, ignoreHost) {
      var interFix;
      if (ignoreHost == null) {
        ignoreHost = false;
      }
      interFix = "" + (this.hostname());
      if ((ignoreHost != null) && ignoreHost === true) {
        interFix = "_";
      }
      return util.format(this.queueFormat(jobName, taskName), interFix);
    };

    Queue.pendingQueueNameForTaskName = function(jobName, taskName, queue, ignoreHostName) {
      if (ignoreHostName == null) {
        ignoreHostName = false;
      }
      return "" + (this.baseQueueNameForTask(jobName, taskName, ignoreHostName)) + ":" + queue + ":pending";
    };

    Queue.pendingQueuePattern = function(jobName, taskName) {
      return "" + (util.format(this.queueFormat(jobName, taskName), "*")) + ":*:pending";
    };

    Queue.workingSetNameForTaskName = function(jobName, taskName) {
      return "" + (this.baseQueueNameForTask(jobName, taskName)) + ":working";
    };

    return Queue;

  })();

  exports.Queue = Queue;

}).call(this);
